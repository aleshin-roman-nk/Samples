хаб - это только запрос и ответ

*** хорошо бы реагировать на события изменения данных
- по созданию нового объекта, сервер дает ответ, что успешно создан
- если сохранено успешно, сервер отвечает
через эти строки серверы и клиенты общаются друг с другом

А почему не события
- тут надо смотреть, не везде нужны строковые запросы-ответы
- какие то случаи, объединенные логическим смыслом идут в евенты


это означает, что к этому объекту подключаются все заинтересованные объекты

хаб - единый объект на всю группу облака

есть группа сервисов
есть группа клиентов

метод хаба
hub.send(string host, string method, object data)


типичный пример



вариант 1
- хаб клиентов
- хаб сервисов
на клиенте выполняется метод send, клиент 
этот вариант хорош для логичности кода, когда в конструктор каждого хаба передаются (конфигурирование) 
передаются клиенты или сервисы соответственно



вариант 2
куча всех вместе



===
при создании клиента, можно в конструкторе просто передать хаб


То есть в презентере, хаб и идет конфигурирование хаба


добавить фабрику... если несколько окон одного типа
запросить хаб создать экземпляр
либо добавить уже созданный
...надо просто чтобы окно отправило сообщение на хаб
в менеджере открытых окон от презентера по сообщению активация ноды


presenter:
hub.AddService(new NodeService)
hub.


====
А может какой то общий реестр команд.
